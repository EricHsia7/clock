{"version":3,"file":"86.6ac2ce0ac562e3cf8b4c.min.js","mappings":"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","sources":["webpack://clock/./node_modules/@erichsia7/pwdgen2/src/core/search.ts","webpack://clock/./node_modules/@erichsia7/pwdgen2/src/core/storage.ts","webpack://clock/./node_modules/@erichsia7/pwdgen2/src/core/utilities.ts","webpack://clock/./node_modules/@erichsia7/pwdgen2/src/core/words-list.ts"],"sourcesContent":["// Import required functions\nimport utilities from './utilities';\nimport { listSavedPassword } from './storage';\n\n// Function to create a search index from saved passwords\nfunction createSearchIndex() {\n  // Get the list of saved passwords\n  var list = listSavedPassword();\n  var list_len = list.length;\n\n  // Initialize the search index object\n  Xsearch.searchIndex = { all: [], hashtags: [], date: [], len: [] };\n\n  // Loop through each saved password to create search index\n  for (var r = 0; r < list_len; r++) {\n    // Initialize an array to store all searchable data for this entry\n    var all = [];\n\n    // Push password, website, note, and username to the all array\n    all.push(list[r].password);\n    all.push(list[r].website);\n    all.push(list[r].note === null ? '' : utilities.deur(atob(list[r].note)));\n    all.push(list[r].username);\n\n    // Convert timestamp to a human-readable format and push to the all array\n    var date = new Date(list[r].time_stamp);\n    all.push(utilities.timestr(date));\n\n    // Get hashtags from the note and push to the all array\n    var hashtags = utilities.gethashtags(all[2], true);\n    var hashtags_len = hashtags.length;\n    all.push(hashtags.join(' '));\n\n    // Push date-related tags to the all array\n    all.push('year:' + date.getFullYear());\n    all.push('month:' + (date.getMonth() + 1));\n    all.push('date:' + date.getDate());\n\n    // Push password length tag to the all array\n    all.push('length:' + String(list[r].password).length);\n\n    // Convert the all array to Unicode array and push to the search index\n    var all_unicode = utilities.unicode_arr(String(all.join('')).toLowerCase());\n    var hashtags_unicode = utilities.unicode_arr(hashtags.join(''));\n    Xsearch.searchIndex.all.push({\n      id: list[r].id,\n      password: all[0],\n      website: all[1],\n      note: all[2],\n      username: all[3],\n      date: all[4],\n      len: all[9],\n      all_unicode: all_unicode,\n      hashtags: hashtags,\n      hashtags_unicode: hashtags_unicode,\n      all: all.join(' '),\n      type: 0\n    });\n\n    // Add hashtags, date tags, and length tags to their respective arrays in the search index\n    for (var w = 0; w < hashtags_len; w++) {\n      if (!(Xsearch.searchIndex.hashtags.indexOf(hashtags[w]) > -1)) {\n        Xsearch.searchIndex.hashtags.push(hashtags[w]);\n      }\n    }\n    for (var w = 6; w < 9; w++) {\n      if (!(Xsearch.searchIndex.date.indexOf(all[w]) > -1)) {\n        Xsearch.searchIndex.date.push(all[w]);\n      }\n    }\n    if (!(Xsearch.searchIndex.len.indexOf(all[9]) > -1)) {\n      Xsearch.searchIndex.len.push(all[9]);\n    }\n  }\n\n  // Return the created search index\n  return Xsearch.searchIndex;\n}\n\n// Function to search passwords based on a query in the search index\nfunction search_passwords(query, index) {\n  // Initialize variables to store suggestions and results\n  var index_hashtags_len = index.hashtags.length;\n  var index_date_len = index.date.length;\n  var index_len_len = index.len.length;\n  var suggestions_hashtags = [];\n  var suggestions_date = [];\n  var suggestions_len = [];\n  var suggestions = [];\n\n  // Search for matching hashtags in the search index\n  for (var h = 0; h < index_hashtags_len; h++) {\n    if (index.hashtags[h].indexOf(query) > -1) {\n      suggestions_hashtags.push({ type: 1, suggestion: index.hashtags[h], similarity: suggestions_hashtags.length < 10 ? utilities.jaroWinklerDistance(query, index.hashtags[h]) : 0 });\n    }\n  }\n\n  // Search for matching date tags in the search index\n  for (var d = 0; d < index_date_len; d++) {\n    if (index.date[d].indexOf(query) > -1) {\n      suggestions_date.push({ type: 2, suggestion: index.date[d], similarity: suggestions_date.length < 10 ? utilities.jaroWinklerDistance(query, index.date[d]) : 0 });\n    }\n  }\n\n  // Search for matching length tags in the search index\n  for (var d = 0; d < index_len_len; d++) {\n    if (index.len[d].indexOf(query) > -1) {\n      suggestions_date.push({ type: 4, suggestion: index.len[d], similarity: suggestions_len.length < 10 ? utilities.jaroWinklerDistance(query, index.len[d]) : 0 });\n    }\n  }\n\n  // Combine and sort suggestions\n  if (suggestions_hashtags.length < 10 && suggestions_date.length < 10 && suggestions_len.length < 10) {\n    suggestions = suggestions_hashtags\n      .concat(suggestions_date)\n      .concat(suggestions_len)\n      .sort(function (a, b) {\n        return b.similarity - a.similarity;\n      });\n  } else {\n    suggestions = suggestions_hashtags.concat(suggestions_date).concat(suggestions_len).sort();\n  }\n\n  // Convert query to Unicode array for matching\n  var query_unicode = utilities.unicode_arr(query);\n  var query_unicode_len = query_unicode.length;\n  var result = [];\n  var index_len = index.all.length;\n\n  // Loop through the search index to find matching results\n  for (var q = 0; q < index_len; q++) {\n    var this_index = index.all[q];\n    var unicode_check = false;\n\n    // Check if the query Unicode array matches any Unicode character in the search index\n    for (var u = 0; u < query_unicode_len; u++) {\n      if (this_index.all_unicode.indexOf(query_unicode[u]) > -1) {\n        unicode_check = true;\n        break;\n      }\n    }\n\n    // If no Unicode character matches, continue to the next index entry\n    if (unicode_check === false) {\n      continue;\n    } else {\n      var text_check = false;\n\n      // Check if the query matches any searchable text in the index entry\n      if (String(this_index.all).toLowerCase().indexOf(query) > -1) {\n        text_check = true;\n      } else {\n        if (String(this_index.note).toLowerCase().indexOf(query) > -1) {\n          text_check = true;\n        } else {\n          if (String(this_index.website).toLowerCase().indexOf(query) > -1) {\n            text_check = true;\n          } else {\n            if (String(this_index.username).toLowerCase().indexOf(query) > -1) {\n              text_check = true;\n            } else {\n              if (String(this_index.password).indexOf(query) > -1) {\n                text_check = true;\n              } else {\n                if (String(this_index.date).indexOf(query) > -1) {\n                  text_check = true;\n                }\n              }\n            }\n          }\n        }\n      }\n\n      // If text matches, add the index entry to the result array\n      if (text_check) {\n        result.push(this_index);\n      }\n    }\n  }\n\n  // Return the search result and suggestions\n  return { result: result, suggestions: suggestions.slice(0, 5), query: query };\n}\n\n// Initialize an empty search index object\nconst searchIndex: object = { all: [], hashtags: [], date: [], len: [] };\n\n// Expose functions and search index object to the global scope\nwindow.Xsearch = {\n  createSearchIndex,\n  search_passwords,\n  searchIndex\n};\nexport default window.Xsearch;\n","// Import required modules and interfaces\nimport fine_grained_password from './fine-grained-password';\nimport utilities from './utilities';\nimport interaction from '../user-interfaces/interaction';\nconst md5 = require('md5');\n\n// Interface for an encrypted password entry\ninterface EncryptedPassword {\n  website: string;\n  username: string;\n  encrypted_password: string;\n  aes_iv: number; // Initialization vector for encryption\n  note: string | null; // Comes in base64 format\n  time_stamp: string; // Comes in ISO 8601 format\n  id: string;\n}\n\n// Interface for a decrypted password entry\ninterface DecryptedPassword {\n  website: string;\n  username: string;\n  password: string;\n  note: string | null; // Comes in base64 format\n  time_stamp: string; // Comes in ISO 8601 format\n  id: string;\n}\n\n// Export Local Storage object to the global scope\nexport const LS = window.localStorage;\n\n// Function to search items by name in Local Storage\nexport function searchItemsbyname(name) {\n  var gh = [];\n  for (var t in window.localStorage) {\n    if (String(t).indexOf(name) > -1) {\n      gh.push(t);\n    }\n  }\n  return gh;\n}\n\n// Function to list all saved passwords with decryption\nexport function listSavedPassword(): object[] {\n  var list = searchItemsbyname('pwdgen2_saved_b');\n  var list_len = list.length;\n  var list_decrypted = [];\n  for (var k = 0; k < list_len; k++) {\n    // Decrypt the encrypted password\n    var this_item = JSON.parse(String(LS.getItem(list[k])));\n    if (this_item.hasOwnProperty('history')) {\n      continue;\n    }\n    var url = '';\n    var website_icon = false;\n    if (utilities.isValidURL(this_item.website)) {\n      url = this_item.website;\n      if (!(this_item.website.indexOf('http://') > -1 || this_item.website.indexOf('https://') > -1)) {\n        url = 'https://' + url;\n      }\n      var url_obj = new URL(url);\n      url_obj.search = '';\n      url_obj.protocol = 'http://';\n      website_icon = `https://remote-ivory-bovid.faviconkit.com/${url_obj.toString().replace('http://', '')}/256`;\n    }\n    // Add the decrypted entry to the list\n    list_decrypted.push({\n      website_icon: website_icon,\n      website: this_item.website,\n      password: utilities.deur(utilities.decryptString(this_item.encrypted_password, this_item.aes_iv)),\n      username: this_item.username,\n      note: this_item.note,\n      time_stamp: this_item.time_stamp,\n      id: this_item.id\n    });\n  }\n  // Sort the list based on timestamp\n  list_decrypted.sort(function (a, b) {\n    return new Date(b.time_stamp).getTime() - new Date(a.time_stamp).getTime();\n  });\n  return list_decrypted;\n}\n\n// Function to upgrade data from an older version\nexport function upgradeData(): void {\n  // Define the ID pattern for generating new IDs\n  var id_pattern = [\n    {\n      type: 'group',\n      group: [\n        {\n          type: 'regex',\n          regex: '/[A-Za-z0-9]/g',\n          quantity: 32,\n          repeat: true\n        }\n      ],\n      actions: ['shuffle']\n    }\n  ];\n\n  // Search for items from the Local Storage\n  var list = searchItemsbyname('pwdgen2_saved_a');\n  if (list.length <= 0) {\n    return '';\n  }\n  var list_len = list.length;\n  var list_encrypted = [];\n  for (var k = 0; k < list_len; k++) {\n    // Extract data from the old version (<=1.8) and upgrade to the new version (>=1.9)\n    var this_item = String(LS.getItem(list[k])).split(':');\n    var hash = list[k].split('_')[3];\n    var pwtime = new Date();\n    pwtime.setTime(this_item[2]);\n    var id = fine_grained_password.generate(id_pattern, 'production');\n    var note = LS.getItem(`pwdgen2_saved_notes_cf_${hash}`) || '';\n    list_encrypted.push({\n      website: '',\n      encrypted_password: this_item[0],\n      aes_iv: parseInt(this_item[1]),\n      note: note,\n      time_stamp: pwtime,\n      id: id\n    });\n    LS.setItem(`pwdgen2_saved_b_${id}`, JSON.stringify(list_encrypted[list_encrypted.length - 1]));\n    LS.removeItem(list[k]);\n  }\n}\n\n// Function to set a password entry\nexport function setPassword(password, username, time, website, note, id): void {\n  // Encrypt the password and save the entry to Local Storage\n  var encryption = utilities.encryptString(utilities.enur(password));\n  var json = {\n    website: website,\n    username: username,\n    encrypted_password: encryption[0],\n    aes_iv: encryption[1],\n    note: note === '' ? null : btoa(utilities.enur(note)),\n    time_stamp: time,\n    id: id\n  };\n  LS.setItem('pwdgen2_saved_b_' + id, JSON.stringify(json));\n}\n\n// Function to add a new password entry\nexport function addPassword(password, username, website, note): string {\n  // Generate a new ID pattern for the entry\n  var id_pattern = [\n    {\n      type: 'group',\n      group: [\n        {\n          type: 'regex',\n          regex: '/[A-Za-z0-9]/g',\n          quantity: 32,\n          repeat: true\n        }\n      ],\n      actions: ['shuffle']\n    }\n  ];\n\n  // Get the current timestamp\n  var time = new Date().toISOString();\n  // Generate a new ID\n  var id = fine_grained_password.generate(id_pattern, 'production');\n\n  // Set the password entry\n  setPassword(password, username, time, website, note, id);\n  return id;\n}\n\n// Function to modify an existing password entry\nexport function modifyPassword(password, username, website, note, id): void | string {\n  // Get the Local Storage keys for the entry and its history\n  var localStorage_key = `pwdgen2_saved_b_${id}`;\n  var localStorage_history_key = `pwdgen2_saved_b_history_${id}`;\n\n  // Check if the entry exists\n  if (LS.hasOwnProperty(localStorage_key)) {\n    var json = JSON.parse(String(LS.getItem(localStorage_key)));\n\n    // Encrypt the password and create the modified JSON\n    var encryption = utilities.encryptString(utilities.enur(password));\n    var modified_json: EncryptedPassword = {\n      website: website,\n      username: username,\n      encrypted_password: encryption[0],\n      aes_iv: encryption[1],\n      note: note === '' ? null : btoa(utilities.enur(note)),\n      time_stamp: json.time_stamp,\n      id: id\n    };\n\n    // Check if the modified entry is the same as the existing one, if yes, return '' to quit function\n    if (md5(JSON.stringify({ website: json.website, username: json.username, password: utilities.deur(utilities.decryptString(json.encrypted_password, json.aes_iv)), note: json.note })) === md5(JSON.stringify({ website: website, username: username, password: password, note: note }))) {\n      return '';\n    }\n\n    // Create or update the history entry\n    if (LS.hasOwnProperty(localStorage_history_key)) {\n      var history: object = JSON.parse(String(LS.getItem(localStorage_history_key)));\n    } else {\n      var history: object = { id: id, history: [] };\n    }\n    history['history'].push(json);\n    LS.setItem(localStorage_history_key, JSON.stringify(history));\n\n    // Update the password entry\n    LS.setItem(localStorage_key, JSON.stringify(modified_json));\n  }\n}\n\n// Function to remove a password entry\nexport function removePassword(id): boolean {\n  // Check if the entry exists, and if yes, remove it from Local Storage\n  if (LS.hasOwnProperty(`pwdgen2_saved_b_${id}`)) {\n    LS.removeItem(`pwdgen2_saved_b_${id}`);\n    if (LS.hasOwnProperty(`pwdgen2_saved_b_history_${id}`)) {\n      LS.removeItem(`pwdgen2_saved_b_history_${id}`);\n    }\n    return true;\n  }\n  return false;\n}\n\n// Function to handle the import of data\nexport function importdatahandler(event) {\n  // Read the file and import the data to Local Storage\n  var f = event.target.files[0];\n  var reader = new FileReader();\n  reader.onload = (function (theFile) {\n    return function (e) {\n      var fileTextContent = e.target.result;\n      var json = JSON.parse(fileTextContent);\n      var data = json.data;\n      var data_len = data.length;\n\n      // Save each entry to Local Storage\n      for (var i = 0; i < data_len; i++) {\n        var this_item = data[i];\n        localStorage.setItem(this_item.key, JSON.stringify(JSON.parse(this_item.content)));\n      }\n\n      // Upgrade the data to the new version\n      upgradeData();\n\n      // Display success message and update the user interface\n      interaction.prompt.prompt_message('Imported data successfully.');\n      interaction.main_page.printSavedPasswordList();\n    };\n  })(f);\n  reader.readAsText(f);\n}\n\n// Function to generate an export file\nexport function generateExportFile() {\n  // Get all saved password entries and create a JSON object for export\n  var list = searchItemsbyname('pwdgen2_saved_b');\n  var list_len = list.length;\n  var export_list = [];\n  for (var k = 0; k < list_len; k++) {\n    var this_item = JSON.parse(String(LS.getItem(list[k])));\n    export_list.push({ key: list[k], content: JSON.stringify(this_item, null, 2) });\n  }\n\n  // Return the JSON object as a string\n  return JSON.stringify({ data: export_list, version: '2023-07-30', export_time_stamp: new Date().toISOString() }, null, 2);\n}\n","// Import required functions\nimport fine_grained_password from './fine-grained-password';\nvar aesjs = require('aes-js');\n\nfunction isValidURL(url: string) {\n  const regex = /^(?:https?:\\/\\/)?(?:www\\.)?([a-zA-Z0-9.-]+\\.[a-zA-Z]{2,})(?:\\/.*)?$/;\n  return regex.test(url);\n}\n\nfunction encryptString(string) {\n  var initialization_vector_pattern = [\n    {\n      type: 'regex',\n      regex: '/[1-9]/g',\n      quantity: 1,\n      repeat: false\n    },\n    {\n      type: 'group',\n      group: [\n        {\n          type: 'regex',\n          regex: '/[0-9]/g',\n          quantity: 9,\n          repeat: true\n        }\n      ],\n      actions: ['shuffle']\n    }\n  ];\n  var initialization_vector = parseInt(fine_grained_password.generate(initialization_vector_pattern, 'production'));\n  var keyu = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31];\n  var textBytes = aesjs.utils.utf8.toBytes(string);\n  var aesCtr = new aesjs.ModeOfOperation.ctr(keyu, new aesjs.Counter(initialization_vector));\n  var encryptedBytes = aesCtr.encrypt(textBytes);\n  var encryptedHex = aesjs.utils.hex.fromBytes(encryptedBytes);\n  return [encryptedHex, initialization_vector];\n}\n\nfunction decryptString(encrypted_string, initialization_vector) {\n  var keye = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31];\n  var encryptedBytese = aesjs.utils.hex.toBytes(encrypted_string);\n  var aesCtre = new aesjs.ModeOfOperation.ctr(keye, new aesjs.Counter(parseInt(initialization_vector)));\n  var decryptedBytese = aesCtre.decrypt(encryptedBytese);\n  var decryptedText = aesjs.utils.utf8.fromBytes(decryptedBytese);\n  return decryptedText;\n}\nfunction enur(u) {\n  return encodeURIComponent(u);\n}\nfunction deur(u) {\n  return decodeURIComponent(u);\n}\n\nfunction gid(n) {\n  var genidchars = '0123456789abcdefghijklmnopqrstuvwxyz';\n  var genid = '';\n  for (var i = 0; i < 16; i++) {\n    var genrandomNumber = Math.floor(Math.random() * genidchars.length);\n    genid += genidchars.substring(genrandomNumber, genrandomNumber + 1);\n  }\n  if (!(n === undefined)) {\n    n = n.replaceAll('_', '-');\n    return n + '-' + genid + '' + new Date().getTime();\n  }\n  return genid + '' + new Date().getTime();\n}\n\nfunction shuffleSelf(array: object, size: number) {\n  var index = -1;\n  var length = array.length;\n  var lastIndex = length - 1;\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = index + Math.floor(Math.random() * (lastIndex - index + 1));\n    var value = array[rand];\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nfunction che(y: number) {\n  if (y < 10) {\n    return '0' + y;\n  } else {\n    return y;\n  }\n}\n\nfunction timestr(date: Date) {\n  return date.getFullYear() + '-' + che(date.getMonth() + 1) + '-' + che(date.getDate()) + ' ' + che(date.getHours()) + ':' + che(date.getMinutes()) + ':' + che(date.getSeconds());\n}\n\nfunction checkTouchFeatures(): boolean {\n  if ('ontouchstart' in window || navigator.maxTouchPoints) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction qe(selector) {\n  return document.querySelector(selector);\n}\n\nfunction qeAll(selector) {\n  return document.querySelectorAll(selector);\n}\n\nfunction copyProperty(source: HTMLElement, target: HTMLElement, property: string): void {\n  target.style.setProperty(property, source.style.getPropertyValue(property));\n}\n\nfunction unicode_arr(str) {\n  var str_len = str.length;\n  var unicode_arr = [];\n  for (var t = 0; t < str_len; t++) {\n    var unicode = str.charCodeAt(t);\n    if (!(unicode_arr.indexOf(unicode) > -1)) {\n      unicode_arr.push(unicode);\n    }\n  }\n  return unicode_arr;\n}\n\nfunction jaroWinklerDistance(str1, str2) {\n  var len1 = str1.length;\n  var len2 = str2.length;\n  var matchDistance = Math.floor(Math.max(len1, len2) / 2) - 1;\n  var matches1 = new Array(len1).fill(false);\n  var matches2 = new Array(len2).fill(false);\n  let matches = 0;\n  let transpositions = 0;\n\n  for (let i = 0; i < len1; i++) {\n    var start = Math.max(0, i - matchDistance);\n    var end = Math.min(i + matchDistance + 1, len2);\n\n    for (let j = start; j < end; j++) {\n      if (!matches2[j] && str1[i] === str2[j]) {\n        matches1[i] = true;\n        matches2[j] = true;\n        matches++;\n        break;\n      }\n    }\n  }\n\n  if (matches === 0) {\n    return 0;\n  }\n\n  let k = 0;\n  for (let i = 0; i < len1; i++) {\n    if (matches1[i]) {\n      while (!matches2[k]) {\n        k++;\n      }\n      if (str1[i] !== str2[k]) {\n        transpositions++;\n      }\n      k++;\n    }\n  }\n\n  var similarity = (matches / len1 + matches / len2 + (matches - transpositions / 2) / matches) / 3;\n  var prefix = 0;\n  while (str1[prefix] === str2[prefix] && prefix < 4) {\n    prefix++;\n  }\n\n  var weight = 0.1;\n  return similarity + prefix * weight * (1 - similarity);\n}\n\nfunction gethashtags(str, k) {\n  var hashtag_regex = /\\B#([a-z0-q9]{2,})(?![~!@#$%^&*()=+_`\\-\\|\\\\/'\\[\\]\\{\\}]|[?.,]*\\w)/g;\n  var hashtags = str.match(hashtag_regex);\n  var hashtags_norepeat = [];\n  if (hashtags === null) {\n    return [];\n  }\n  var hashtags_len = hashtags.length;\n  for (var w = 0; w < hashtags_len; w++) {\n    if (!(hashtags_norepeat.indexOf(hashtags[w]) > -1)) {\n      hashtags_norepeat.push(hashtags[w]);\n    }\n  }\n  if (k) {\n    for (var s = 0; s < hashtags_norepeat.length; s++) {\n      var hashtagkey = String(hashtags_norepeat[s]).replaceAll('#', '').toLowerCase();\n      allhashtag[hashtagkey] = hashtags_norepeat[s];\n    }\n  }\n  return hashtags_norepeat;\n}\n\nfunction fetchWithProgress(url, progressCallback) {\n  return new Promise((resolve, reject) => {\n    // Fetch the URL using the Fetch API\n    fetch(url)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Network response was not OK');\n        }\n        const contentLength = Number(response.headers.get('Content-Length'));\n        const reader = response.body.getReader();\n        var receivedBytes = 0;\n        const decoder = new TextDecoder();\n        var textContent = '';\n        function read() {\n          reader\n            .read()\n            .then(({ done, value }) => {\n              if (done) {\n                resolve(textContent);\n                return;\n              }\n              receivedBytes += value.length;\n              const progress = (receivedBytes / 85878) * 100;\n              progressCallback(progress);\n              const chunk = decoder.decode(value, { stream: true });\n              textContent += chunk;\n              read();\n            })\n            .catch((error) => {\n              reject(error);\n            });\n        }\n        read();\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n}\n\nfunction encodeSignsToHtmlEntities(html: string) {\n  return html.replace(/[\\u00A0-\\u9999<>\\&]/g, function (i) {\n    return '&#' + i.charCodeAt(0) + ';';\n  });\n}\n\nfunction isDarkMode(): boolean {\n  if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction hsvToRgb(h, s, v) {\n  // Normalize values\n  h /= 360;\n  s /= 100;\n  v /= 100;\n\n  let r, g, b;\n\n  if (s === 0) {\n    // If saturation is 0, the color is a shade of gray\n    r = g = b = v;\n  } else {\n    const i = Math.floor(h * 6);\n    const f = h * 6 - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n      case 0:\n        r = v;\n        g = t;\n        b = p;\n        break;\n      case 1:\n        r = q;\n        g = v;\n        b = p;\n        break;\n      case 2:\n        r = p;\n        g = v;\n        b = t;\n        break;\n      case 3:\n        r = p;\n        g = q;\n        b = v;\n        break;\n      case 4:\n        r = t;\n        g = p;\n        b = v;\n        break;\n      case 5:\n        r = v;\n        g = p;\n        b = q;\n        break;\n    }\n  }\n\n  // Convert RGB values to the range of 0-255\n  const rgb = {\n    r: Math.round(r * 255),\n    g: Math.round(g * 255),\n    b: Math.round(b * 255)\n  };\n\n  return rgb;\n}\n\nfunction randomColorSet() {\n  var randomIntInRange = function (min, max) {\n    return Math.max(Math.min(Math.round(min + (max - min) * Math.random()), max), min);\n  };\n\n  var h = randomIntInRange(0, 360);\n  var f = function (v: number, a: number) {\n    var hsv_text = { h: h, s: 67, v: v };\n    var hsv_bg = { h: h, s: 100, v: v };\n    var rgb_text = hsvToRgb(hsv_text.h, hsv_text.s, hsv_text.v);\n    var rgb_bg = hsvToRgb(hsv_bg.h, hsv_bg.s, hsv_bg.v);\n    var text = { r: rgb_text.r, g: rgb_text.g, b: rgb_text.b, a: 1, str: `rgba(${rgb_text.r},${rgb_text.g},${rgb_text.b},${1})` };\n    var bg = { r: rgb_bg.r, g: rgb_bg.g, b: rgb_bg.b, a: a, str: `rgba(${rgb_bg.r},${rgb_bg.g},${rgb_bg.b},${a})` };\n    return { text, bg };\n  };\n  return { light: f(75, 0.06), dark: f(100, 0.11) };\n}\n\nfunction blendColors(hexColor, rgbaColor) {\n  var hexToRGBA = function (hex, alpha) {\n    const r = parseInt(hex.substring(1, 3), 16);\n    const g = parseInt(hex.substring(3, 5), 16);\n    const b = parseInt(hex.substring(5, 7), 16);\n    return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n  };\n\n  const rgba: Array = rgbaColor\n    .substring(5, rgbaColor.length - 1)\n    .split(',')\n    .map((f) => parseFloat(String(f).trim()));\n  const r: number = rgba[0];\n  const g: number = rgba[1];\n  const b: number = rgba[2];\n  const alpha: number = rgba[3];\n\n  const blendedR: number = Math.round((1 - alpha) * parseInt(hexColor.substring(1, 3), 16) + alpha * r);\n  const blendedG: number = Math.round((1 - alpha) * parseInt(hexColor.substring(3, 5), 16) + alpha * g);\n  const blendedB: number = Math.round((1 - alpha) * parseInt(hexColor.substring(5, 7), 16) + alpha * b);\n\n  return `#${blendedR.toString(16).padStart(2, '0')}${blendedG.toString(16).padStart(2, '0')}${blendedB.toString(16).padStart(2, '0')}`;\n}\n\n// Expose functions to the global scope\nwindow.utilities = {\n  encryptString,\n  decryptString,\n  enur,\n  deur,\n  gid,\n  shuffleSelf,\n  che,\n  timestr,\n  checkTouchFeatures,\n  qe,\n  qeAll,\n  copyProperty,\n  unicode_arr,\n  jaroWinklerDistance,\n  gethashtags,\n  fetchWithProgress,\n  hsvToRgb,\n  randomColorSet,\n  isDarkMode,\n  blendColors,\n  encodeSignsToHtmlEntities,\n  isValidURL\n};\n\nexport default window.utilities;\n","// Import required functions\nimport searchItemsbyname from 'src/core/storage';\nimport utilities from './utilities';\nimport { LS } from './storage';\n\nfunction getWordsList() {\n  if (!words_list.loaded) {\n    if (LS.hasOwnProperty('pwdgen2_words_list_cache')) {\n      var text = String(LS.getItem('pwdgen2_words_list_cache'));\n      var array = text.split(/\\n/g).forEach((e) => {\n        if (words_list.c.hasOwnProperty(e.substring(0, 3))) {\n          words_list.c[e.substring(0, 3)].push(e);\n        } else {\n          words_list.c[e.substring(0, 3)] = [e];\n        }\n      });\n      words_list.loaded = true;\n      return '';\n    }\n    var url: string = `https://erichsia7.github.io/pwdgen2/words_list/index.txt?${new Date().getTime()}`;\n    //var url = 'https://docs.google.com/spreadsheets/d/e/2PACX-1vQLnA8hJhyZ8V7ZxrgeF6l7kIHahobdTqkXwdmEcBgbC0UNdSFCU1dy7wuFMOzuq_DBx49uzCjknOMJ/pub?gid=0&single=true&output=csv&' + new Date().getTime();\n    var handleProgress = function (progress) {\n      words_list.progress = progress;\n    };\n    utilities\n      .fetchWithProgress(url, handleProgress)\n      .then(function (text) {\n        var array = text.split(/\\n/g).forEach((e) => {\n          if (words_list.c.hasOwnProperty(e.substring(0, 3))) {\n            words_list.c[e.substring(0, 3)].push(e);\n          } else {\n            words_list.c[e.substring(0, 3)] = [e];\n          }\n        });\n        words_list.loaded = true;\n        LS.setItem('pwdgen2_words_list_cache', text);\n      })\n      .catch((error) => {\n        //console.error('Error fetching URL:', error);\n      });\n  }\n}\n\n// Expose functions to the global scope\nwindow.words_list = { loaded: false, progress: 0, c: {}, getWordsList: getWordsList };\n\nexport default window.words_list;\n"],"names":["window","Xsearch","createSearchIndex","list","listSavedPassword","list_len","length","searchIndex","all","hashtags","date","len","r","push","password","website","note","utilities","deur","atob","username","Date","time_stamp","timestr","gethashtags","hashtags_len","join","getFullYear","getMonth","getDate","String","all_unicode","unicode_arr","toLowerCase","hashtags_unicode","id","type","w","indexOf","search_passwords","query","index","index_hashtags_len","index_date_len","index_len_len","suggestions_hashtags","suggestions_date","suggestions_len","suggestions","h","suggestion","similarity","jaroWinklerDistance","d","concat","sort","a","b","query_unicode","query_unicode_len","result","index_len","q","this_index","unicode_check","u","text_check","slice","md5","require","LS","localStorage","searchItemsbyname","name","gh","t","list_decrypted","k","this_item","JSON","parse","getItem","hasOwnProperty","url","website_icon","isValidURL","url_obj","URL","search","protocol","toString","replace","decryptString","encrypted_password","aes_iv","getTime","addPassword","time","toISOString","fine_grained_password","generate","group","regex","quantity","repeat","actions","encryption","encryptString","enur","json","btoa","setItem","stringify","setPassword","modifyPassword","localStorage_key","localStorage_history_key","modified_json","history","removePassword","removeItem","generateExportFile","export_list","key","content","data","version","export_time_stamp","aesjs","che","y","hsvToRgb","s","v","g","i","Math","floor","f","p","round","string","initialization_vector","parseInt","textBytes","utils","utf8","toBytes","encryptedBytes","ModeOfOperation","ctr","Counter","encrypt","hex","fromBytes","encrypted_string","encryptedBytese","decryptedBytese","decrypt","encodeURIComponent","decodeURIComponent","gid","n","genidchars","genid","genrandomNumber","random","substring","undefined","replaceAll","shuffleSelf","array","size","lastIndex","rand","value","getHours","getMinutes","getSeconds","checkTouchFeatures","navigator","maxTouchPoints","qe","selector","document","querySelector","qeAll","querySelectorAll","copyProperty","source","target","property","style","setProperty","getPropertyValue","str","str_len","unicode","charCodeAt","str1","str2","len1","len2","matchDistance","max","matches1","Array","fill","matches2","matches","transpositions","start","end","min","j","prefix","match","hashtags_norepeat","hashtagkey","allhashtag","fetchWithProgress","progressCallback","Promise","resolve","reject","fetch","then","response","ok","Error","Number","headers","get","reader","body","getReader","receivedBytes","decoder","TextDecoder","textContent","read","_ref","done","chunk","decode","stream","error","randomColorSet","hsv_text","hsv_bg","rgb_text","rgb_bg","text","bg","light","dark","isDarkMode","matchMedia","blendColors","hexColor","rgbaColor","rgba","split","map","parseFloat","trim","alpha","blendedR","blendedG","blendedB","padStart","encodeSignsToHtmlEntities","html","test","words_list","loaded","progress","c","getWordsList","forEach","e"],"sourceRoot":""}